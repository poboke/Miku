//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve
//     Nygard.
//

//#import "NSTextStorage.h"

//#import "DVTSourceBufferProvider.h"
//#import "DVTSourceLanguageServiceDelegate.h"

@class DVTFontAndColorTheme, DVTObservingToken, DVTSourceCodeLanguage,
    DVTSourceLandmarkItem,
    DVTSourceLanguageService<DVTSourceLanguageSourceModelService>,
    DVTSourceLanguageService<DVTSourceLanguageSyntaxTypeService>,
    DVTSourceModel, NSDictionary, NSMutableAttributedString, NSString, NSTimer,
    _LazyInvalidationHelper;

//@interface DVTTextStorage : NSTextStorage <DVTSourceBufferProvider,
//DVTSourceLanguageServiceDelegate>
@interface DVTTextStorage : NSTextStorage {
  NSMutableAttributedString *_contents;
  //    struct _DVTTextLineOffsetTable _lineOffsets;
  unsigned long long _changeCapacity;
  unsigned long long _numChanges;
  struct _DVTTextChangeEntry *_changes;
  DVTSourceCodeLanguage *_language;
  NSTimer *_sourceModelUpdater;
  DVTSourceLandmarkItem *_topSourceLandmark;
  DVTSourceLandmarkItem *_rootImportLandmark;
  NSTimer *_landmarksCacheTimer;
  double _lastEditTimestamp;
  unsigned long long _tabWidth;
  unsigned long long _indentWidth;
  unsigned long long _wrappedLineIndentWidth;
  DVTObservingToken *_wrappedLinesIndentObserver;
  double _advancementForSpace;
  DVTFontAndColorTheme *_fontAndColorTheme;
  struct _NSRange _rangeNeedingInvalidation;
  struct {
    unsigned int lineEndings : 2;
    unsigned int usesTabs : 1;
    unsigned int syntaxColoringEnabled : 1;
    unsigned int processingLazyInvalidation : 1;
    unsigned int breakChangeCoalescing : 1;
    unsigned int doingBatchEdit : 1;
    unsigned int batchEditMayContainTokens : 1;
    unsigned int batchEditMayContainLinks : 1;
    unsigned int batchEditMayContainAttachments : 1;
    unsigned int doingSubwordMovement : 1;
    unsigned int doingExpressionMovement : 1;
    unsigned int delegateRespondsToShouldAllowEditing : 1;
    unsigned int delegateRespondsToDidUpdateSourceLandmarks : 1;
    unsigned int delegateRespondsToNodeTypeForItem : 1;
    unsigned int delegateRespondsToSourceLanguageServiceContext : 1;
    unsigned int forceFixAttributes : 1;
    unsigned int languageServiceSupportsSourceModel : 1;
  } _tsflags;
  _LazyInvalidationHelper *_lazyInvalidationHelper;
  //    DVTSourceLanguageService<DVTSourceLanguageSyntaxTypeService>
  //    *_sourceLanguageService;
  DVTObservingToken *_sourceLanguageServiceContextObservingToken;
}

+ (id)_changeTrackingLogAspect;
+ (id)_sourceLandmarksLogAspect;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingSourceLanguageServiceContext;
+ (BOOL)usesScreenFonts;
//- (void).cxx_destruct;
- (id)_ancestorItemForTokenizableItem:(id)arg1;
- (id)_associatedTextViews;
- (id)_debugInfoForChangeIndex:(unsigned long long)arg1
                 toChangeIndex:(unsigned long long)arg2;
- (id)_debugInfoString;
- (id)_debugStringFromUnsignedIntegers:(const unsigned long long *)arg1
                                 count:(unsigned long long)arg2;
- (void)_dropRecomputableState;
- (void)_dumpChangeHistory;
- (void)_dumpLineOffsetsTable;
- (void)_dvtTextStorageCommonInit;
- (BOOL)_forceFixAttributes;
- (long long)_getIndentForObjectLiteral:(id)arg1
                             atLocation:(unsigned long long)arg2;
- (void)_invalidateCallback:(id)arg1;
- (void)_invalidateSourceLandmarks:(id)arg1;
- (BOOL)_isExpressionItemLikeFunction:(id)arg1;
- (BOOL)_isExpressionItemLikelyTarget:(id)arg1;
- (BOOL)_isInvalidObjectLiteralItem:(id)arg1;
- (BOOL)_isItemBlockExpression:(id)arg1;
- (BOOL)_isItemBracketExpression:(id)arg1;
- (BOOL)_isItemBracketLikeExpression:(id)arg1;
- (BOOL)_isItemExpression:(id)arg1;
- (BOOL)_isItemParenExpression:(id)arg1;
- (BOOL)_isTextEmptyInBetweenItem:(id)arg1 prevItem:(id)arg2;
- (id)_parenLikeItemAtLocation:(unsigned long long)arg1;
- (void)_processLazyInvalidation;
- (void)_restoreRecomputableState;
- (unsigned long long)_reverseParseExpressionFromIndex:(unsigned long long)arg1
                                              ofParent:(id)arg2;
- (void)_setForceFixAttributes:(BOOL)arg1;
- (id)_sourceLandmarkAtCharacterIndex:(unsigned long long)arg1
                      inLandmarkItems:(id)arg2;
- (unsigned long long)_startLocationForObjCMethodCallAtLocation:
                          (unsigned long long)arg1
                                                       withArgs:(char *)arg2;
- (id)_textInBetweenItem:(id)arg1 prevItem:(id)arg2;
- (void)_themeColorsChanged:(id)arg1;
- (void)_updateLazyInvalidationForEditedRange:(struct _NSRange)arg1
                               changeInLength:(long long)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)addLayoutManager:(id)arg1;
@property(readonly) double advancementForSpace;
@property(readonly) double advancementForTab;
- (id)attribute:(id)arg1
        atIndex:(unsigned long long)arg2
 effectiveRange:(struct _NSRange *)arg3;
- (id)attribute:(id)arg1
                  atIndex:(unsigned long long)arg2
    longestEffectiveRange:(struct _NSRange *)arg3
                  inRange:(struct _NSRange)arg4;
- (id)attributedSubstringFromRange:(struct _NSRange)arg1;
- (id)attributesAtIndex:(unsigned long long)arg1
         effectiveRange:(struct _NSRange *)arg2;
- (id)attributesAtIndex:(unsigned long long)arg1
  longestEffectiveRange:(struct _NSRange *)arg2
                inRange:(struct _NSRange)arg3;
@property BOOL batchEditMayContainAttachments;
@property BOOL batchEditMayContainLinks;
@property BOOL batchEditMayContainTokens;
- (void)beginEditing;
- (void)breakChangeTrackingCoalescing;
- (unsigned long long)changeIndexForTimestamp:(double)arg1;
- (struct _NSRange)characterRangeForCharacterRange:(struct _NSRange)arg1
                                   fromChangeIndex:(unsigned long long)arg2
                                     toChangeIndex:(unsigned long long)arg3;
- (struct _NSRange)characterRangeForCharacterRange:(struct _NSRange)arg1
                                     fromTimestamp:(double)arg2
                                       toTimestamp:(double)arg3;
- (struct _NSRange)characterRangeForLineRange:(struct _NSRange)arg1;
- (struct _NSRange)characterRangeFromDocumentLocation:(id)arg1;
- (void)clearChangeHistory;
- (id)colorAtCharacterIndex:(unsigned long long)arg1
             effectiveRange:(struct _NSRange *)arg2
                    context:(id)arg3;
- (long long)columnForPositionConvertingTabs:(unsigned long long)arg1;
- (id)compatibleLocationFromLocation:(id)arg1;
- (id)contents;
- (id)convertLocationToNativeNSStringEncodedLocation:(id)arg1;
- (id)convertLocationToUTF8EncodedLocation:(id)arg1;
@property(readonly) unsigned long long currentChangeIndex;
- (struct _NSRange)currentWordAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)delayedInvalidateDisplayForLineRange:(struct _NSRange)arg1;
//@property id <DVTTextStorageDelegate> delegate;
@property(readonly, copy) NSString *description;
- (void)didReplaceCharactersInRange:(struct _NSRange)arg1
                         withString:(id)arg2
                     changeInLength:(long long)arg3
                     replacedString:(id)arg4;
- (void)doingBatchEdit:(BOOL)arg1;
- (void)doingBatchEdit:(BOOL)arg1 notifyModel:(BOOL)arg2;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1
                              inRange:(struct _NSRange)arg2;
- (unsigned long long)dvt_nextWordFromIndex:(unsigned long long)arg1
                                    forward:(BOOL)arg2;
- (void)endEditing;
- (unsigned long long)firstColonAfterItem:(id)arg1
                                  inRange:(struct _NSRange)arg2;
- (long long)firstNonblankForLine:(long long)arg1 convertTabs:(BOOL)arg2;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)arg1;
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (void)fixSyntaxColoringInRange:(struct _NSRange)arg1;
- (BOOL)fixesAttributesLazily;
@property(retain) DVTFontAndColorTheme *fontAndColorTheme;
- (struct _NSRange)functionOrMethodBodyRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)functionRangeAtIndex:(unsigned long long)arg1
                     isDefinitionOrCall:(char *)arg2;
- (long long)getIndentForLine:(long long)arg1;
- (id)getTextForLineSansBlanks:(long long)arg1;
@property(readonly) BOOL hasPendingSourceLandmarkInvalidation;
- (id)importLandmarkItems;
- (id)importStatementStringAtCharacterIndex:(unsigned long long)arg1;
- (id)importStatementStringAtCharacterIndex:(unsigned long long)arg1
                             effectiveRange:(struct _NSRange *)arg2
                                   isModule:(char *)arg3;
- (BOOL)indentAtBeginningOfLineForCharacterRange:(struct _NSRange)arg1
                                     undoManager:(id)arg2;
- (void)indentCharacterRange:(struct _NSRange)arg1 undoManager:(id)arg2;
- (BOOL)indentLine:(long long)arg1
           options:(unsigned long long)arg2
       undoManager:(id)arg3;
- (void)indentLineRange:(struct _NSRange)arg1 undoManager:(id)arg2;
@property unsigned long long
    indentWidth; // @synthesize indentWidth=_indentWidth;
- (double)indentationForWrappedLineAtIndex:(unsigned long long)arg1;
- (id)init;
- (id)initWithAttributedString:(id)arg1;
- (id)initWithOwnedMutableAttributedString:(id)arg1;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (void)invalidateAllLandmarks;
- (void)invalidateAttributesInRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForLineRange:(struct _NSRange)arg1;
- (void)invalidateDisplayInRange:(struct _NSRange)arg1;
- (void)invalidateLayoutForLineRange:(struct _NSRange)arg1;
- (BOOL)isAtBOL:(struct _NSRange)arg1;
- (BOOL)isAtFirstArgumentInMethodCallAtLocation:(unsigned long long)arg1
                                         inCall:(char *)arg2;
- (BOOL)isDoingBatchEdit;
@property(readonly) BOOL isEditable;
@property(getter=isExpressionMovement) BOOL expressionMovement;
@property(readonly, getter=isIndentable) BOOL indentable;
@property(getter=isSubwordMovement) BOOL subwordMovement;
@property(getter=isSyntaxColoringEnabled) BOOL syntaxColoringEnabled;
@property(copy) DVTSourceCodeLanguage *language;
//@property(readonly)
//DVTSourceLanguageService<DVTSourceLanguageSyntaxTypeService> *languageService;
@property double
    lastEditTimestamp; // @synthesize lastEditTimestamp=_lastEditTimestamp;
- (unsigned long long)leadingWhitespacePositionsForLine:
    (unsigned long long)arg1;
- (unsigned long long)length;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1
                               withinRange:(struct _NSRange)arg2;
@property unsigned long long lineEndings;
- (struct _NSRange)lineRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)lineRangeForLineRange:(struct _NSRange)arg1
                         fromChangeIndex:(unsigned long long)arg2
                           toChangeIndex:(unsigned long long)arg3;
- (struct _NSRange)lineRangeForLineRange:(struct _NSRange)arg1
                           fromTimestamp:(double)arg2
                             toTimestamp:(double)arg3;
- (unsigned long long)locationForOpeningBracketForClosingBracket:
                          (unsigned long long)arg1
                                                        withArgs:(char *)arg2;
- (struct _NSRange)methodCallRangeAtIndex:(unsigned long long)arg1;
- (struct _NSRange)methodDefinitionRangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)nextExpressionFromIndex:(unsigned long long)arg1
                                      forward:(BOOL)arg2;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1
                                forward:(BOOL)arg2;
- (long long)nodeTypeAtCharacterIndex:(unsigned long long)arg1
                       effectiveRange:(struct _NSRange *)arg2
                              context:(id)arg3;
- (long long)nodeTypeForTokenizableItem:(id)arg1;
@property(readonly) unsigned long long numberOfLines;
- (void)processEditing;
@property BOOL processingLazyInvalidation;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfWordAtIndex:(unsigned long long)arg1
                        allowNonWords:(BOOL)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1
            withAttributedString:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1
            withAttributedString:(id)arg2
                 withUndoManager:(id)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1
                      withString:(id)arg2
               evenIfNotEditable:(BOOL)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1
                      withString:(id)arg2
                 withUndoManager:(id)arg3;
- (void)resetAdvancementForSpace;
- (void)scheduleLazyInvalidationForRange:(struct _NSRange)arg1;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
@property(nonatomic) unsigned long long tabWidth;
@property BOOL usesTabs;
@property unsigned long long
    wrappedLineIndentWidth; // @synthesize
                            // wrappedLineIndentWidth=_wrappedLineIndentWidth;
- (id)sourceLandmarkAtCharacterIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSDictionary *sourceLanguageServiceContext;
@property(readonly) DVTSourceModel *sourceModel;
//@property(readonly)
//DVTSourceLanguageService<DVTSourceLanguageSourceModelService>
//*sourceModelService;
@property(readonly) DVTSourceModel *sourceModelWithoutParsing;
- (id)string;
- (id)stringBySwappingRange:(struct _NSRange)arg1
          withAdjacentRange:(struct _NSRange)arg2;
- (id)stringForItem:(id)arg1;
- (id)symbolNameAtCharacterIndex:(unsigned long long)arg1 nameRanges:(id *)arg2;
- (long long)syntaxTypeForItem:(id)arg1 context:(id)arg2;
@property(readonly) DVTSourceLandmarkItem *topSourceLandmark;
- (void)updateAttributesInRange:(struct _NSRange)arg1;
- (id)updatedLocationFromLocation:(id)arg1 toTimestamp:(double)arg2;
- (void)willReplaceCharactersInRange:(struct _NSRange)arg1
                          withString:(id)arg2
                      changeInLength:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end
